/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./js/main.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./js/main.js":
/*!********************!*\
  !*** ./js/main.js ***!
  \********************/
/*! no static exports found */
/***/ (function(module, exports) {

window.addEventListener('DOMContentLoaded', function () {
  var navToggle = document.querySelector('.nav-toggle');
  var pageNav = document.querySelector('.nav');
  var header = document.querySelector('.header__wrapper');
  var body = document.querySelector('.page__body');
  var navList = document.querySelector('.nav__list');
  header.classList.remove('header__wrapper--nojs');
  pageNav.classList.remove('nav--opened');
  pageNav.classList.add('nav--closed');
  navToggle.addEventListener('click', function (evt) {
    evt.stopPropagation();

    if (navToggle.classList.contains('nav-toggle--closed')) {
      openMenu();
    } else {
      closeMenu();
    }
  });
  body.addEventListener('click', function (evt) {
    if (evt.target !== navList) {
      closeMenu();
    }
  });

  function openMenu() {
    navToggle.classList.remove('nav-toggle--closed');
    navToggle.classList.add('nav-toggle--opened');
    body.classList.add('page__body--lock');
    pageNav.classList.remove('nav--closed');
    pageNav.classList.add('nav--opened');
  }

  function closeMenu() {
    navToggle.classList.remove('nav-toggle--opened');
    navToggle.classList.add('nav-toggle--closed');
    body.classList.remove('page__body--lock');
    pageNav.classList.remove('nav--opened');
    pageNav.classList.add('nav--closed');
  }

  var menuLinks = document.querySelectorAll('.anchor-link[data-goto]');

  function onMenuLinkClick(evt) {
    var menuLink = evt.target;

    if (menuLink.dataset.goto && document.querySelector(menuLink.dataset.goto)) {
      var gotoBlock = document.querySelector(menuLink.dataset.goto);
      var gotoBlockValue = gotoBlock.getBoundingClientRect().top + pageYOffset;

      if (pageNav.classList.contains('nav--opened')) {
        pageNav.classList.remove('nav--opened');
        pageNav.classList.add('nav--closed');
        body.classList.remove('page__body--lock');
        navToggle.classList.remove('nav-toggle--opened');
        navToggle.classList.add('nav-toggle--closed');
      }

      window.scrollTo({
        top: gotoBlockValue,
        behavior: 'smooth'
      });
      evt.preventDefault();
    }
  }

  if (menuLinks.length > 0) {
    menuLinks.forEach(function (menuLink) {
      menuLink.addEventListener('click', onMenuLinkClick);
    });
  }

  var formInput = document.querySelectorAll('input');
  formInput.forEach(function (el) {
    el.addEventListener('change', changeHandler);
  }); // записывает изменение значения инпута в localStorage

  function changeHandler(e) {
    localStorage.setItem(e.target.name, e.target.value);
  } // записывает значения инпута из localStorage в инпут формы


  function getCheckStorage() {
    for (var i = 0; i < formInput.length; i++) {
      formInput[i].value = localStorage.getItem(formInput[i].name);
    }
  }

  getCheckStorage();
});

/***/ })

/******/ });
//# sourceMappingURL=main.min.js.map